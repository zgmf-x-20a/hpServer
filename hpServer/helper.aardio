namespace hpServer.helper;

messageStruct = class {
	INT msgType;
	INT poolIndex;
	INT connId;
	INT remoteAddr;
	INT remotePort;
	BYTE final;	//---------WS>>特有------
	BYTE reserved;
	BYTE opCode;
	INT mask;
	LONG bodyLen;
	LONG bodyRemain;//---------WS<<特有------
	INT localAddr;//-------Http>>特有----
	INT localPort;
	INT host;
	INT method;
	INT uri;
	INT pHeader;//-------Http<<特有----
	INT pData;//content
}


httpDataStruct = class{
    INT connId;
	STRING remoteAddr;
	INT remotePort;
	STRING localAddr;
	INT localPort;
	STRING host;
	STRING method;
	STRING uri;
	STRING header;
	INT pData;//原始结构到此为止
	INT index;
	pointer content;
}

wsDataStruct = class{
    INT connId;
	STRING remoteAddr;
	INT remotePort;
	BOOL final;
	BYTE reserved;
	BYTE opCode;
	INT mask;
	LONG bodyLen;
	LONG bodyRemain;
	INT pData;//原始结构到此为止
	INT index;//记录消息池中的序号
	pointer content;//buffer的指针
}

threadMessageStructOld = class {
    BOOL err;
	INT tid;
	INT index;
	INT event;
	BOOL succ;
	INT timpstamp;
	INT connLength;//记录实际的长度
	INT connId[] = {length = 64}; //最长是64位
	INT httpStatue;
	pointer header;
	pointer content;
}

retMsgStruct = function(ptr){
	var header = ..raw.convert(ptr,{BYTE statue;INT tid;INT index;INT msgtype;INT timpstamp;INT length;} )
	var len = header.length;
	
	return { 
		BYTE statue;
		INT tid;
		INT index;
		INT msgtype;
		INT timpstamp;
		INT length;
		INT connIds[] = { length = len };
		INT msgTypes[] = { length = len };
		INT codes[] = { length = len };
		INT masks[] = { length = len };
		INT headers[] = { length = len };
		INT bodys[] = { length = len };
	}
}

			